plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.musicplayer"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "SPOTIFY_CLIENT_ID", apikeyProperties['SPOTIFY_CLIENT_ID'])
        buildConfigField("String", "SPOTIFY_REDIRECT_URI", apikeyProperties['SPOTIFY_REDIRECT_URI'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer:1.0.0-alpha02"

    // For DASH playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-dash:1.0.0-alpha02"
    // For HLS playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-hls:1.0.0-alpha02"
    // For RTSP playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-rtsp:1.0.0-alpha02"
    // For ad insertion using the Interactive Media Ads SDK with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-ima:1.0.0-alpha02"

    // For loading data using the Cronet network stack
    implementation "androidx.media3:media3-datasource-cronet:1.0.0-alpha02"
    // For loading data using the OkHttp network stack
    implementation "androidx.media3:media3-datasource-okhttp:1.0.0-alpha02"
    // For loading data using librtmp
    implementation "androidx.media3:media3-datasource-rtmp:1.0.0-alpha02"

    // For building media playback UIs
    implementation "androidx.media3:media3-ui:1.0.0-alpha02"
    // For building media playback UIs for Android TV using the Jetpack Leanback library
    implementation "androidx.media3:media3-ui-leanback:1.0.0-alpha02"

    // For exposing and controlling media sessions
    implementation "androidx.media3:media3-session:1.0.0-alpha02"

    // For extracting data from media containers
    implementation "androidx.media3:media3-extractor:1.0.0-alpha02"

    // For integrating with Cast
    implementation "androidx.media3:media3-cast:1.0.0-alpha02"

    // For scheduling background operations using Jetpack Work's WorkManager with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-workmanager:1.0.0-alpha02"

    // For transforming media files
    implementation "androidx.media3:media3-transformer:1.0.0-alpha02"

    // Utilities for testing media components (including ExoPlayer components)
    implementation "androidx.media3:media3-test-utils:1.0.0-alpha02"
    // Utilities for testing media components (including ExoPlayer components) via Robolectric
    implementation "androidx.media3:media3-test-utils-robolectric:1.0.0-alpha02"

    // Common functionality for media database components
    implementation "androidx.media3:media3-database:1.0.0-alpha02"
    // Common functionality for media decoders
    implementation "androidx.media3:media3-decoder:1.0.0-alpha02"
    // Common functionality for loading data
    implementation "androidx.media3:media3-datasource:1.0.0-alpha02"
    // Common functionality used across multiple media libraries
    implementation "androidx.media3:media3-common:1.0.0-alpha02"

    // Spotify
    implementation files('../libs/spotify-app-remote-release-0.7.2.aar')

    // Dependency injection koin
    implementation "io.insert-koin:koin-gradle-plugin:3.2.0-beta-1"
    implementation "io.insert-koin:koin-annotations:1.0.0-beta-1"
    implementation "io.insert-koin:koin-ksp-compiler:1.0.0-beta-1"
    implementation "io.insert-koin:koin-core:3.2.0-beta-1"
    implementation "io.insert-koin:koin-androidx-compose:3.2.0-beta-1"
    implementation "io.insert-koin:koin-android:3.2.0-beta-1"
    implementation "io.insert-koin:koin-androidx-workmanager:3.2.0-beta-1"
    implementation "androidx.window:window:1.0.0"
    testImplementation "io.insert-koin:koin-test:3.1.5"

    implementation "com.google.code.gson:gson:2.9.0"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.20.3"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:1.2.0-alpha05"
    implementation "androidx.compose.material3:material3:1.0.0-alpha07"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation "androidx.navigation:navigation-compose:2.4.1"
    implementation 'androidx.activity:activity-compose:1.4.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}

tasks.whenTaskAdded { task ->
    if(task.name.contains("connectedDebugAndroidTest")) {
        task.enabled = false
    }
}